[tox]
envlist =
        precommit,
        py{27,35}-django110,
        py{27,35,36}-django111,
        py{35,36,37}-django20,
        py{35,36,37}-django21,
        py{35,36,37}-django22,
        flake8,
        mypy,
        importlint,
        mkdocs,
        vale,
        doctest,
        remarklint,
        yamllint,
        jscpd
isolated_build=true

[testenv]
deps =
     django110: Django==1.10.*
     django111: Django==1.11.*
     django20: Django==2.0.*
     django21: Django==2.1.*
     django22: Django==2.2.*
     django{110,111,20,21,22}: pytest-django
     PyYAML
     pytest
     pytest-randomly
     pytest-timeout
     coverage
     attrs
     py{36,37}: pydantic
setenv =
       DJANGO_SETTINGS_MODULE = django_project.settings
commands_pre = pip install ./tests/helpers/.
commands = coverage run -m pytest []

[testenv:precommit]
basepython = python3.7
skip_install = true
deps =
     pre-commit
commands_pre =
commands =
         pre-commit autoupdate
         pre-commit run --all-files
commands_post = sed -i "s/rev: .*$/rev: ''/g" .pre-commit-config.yaml
whitelist_externals = sed

[testenv:flake8]
basepython = python3.7
skip_install = true
deps =
     flake8
     flake8-bugbear
     flake8-builtins
     flake8-eradicate
     flake8-executable
     flake8-fixme
     flake8-print
     flake8-pyi
     flake8-pytest
     flake8-pytest-style
commands_pre =
commands = flake8

[testenv:mypy]
basepython = python3.7
skip_install = true
deps =
     mypy
     django-stubs
     pydantic
commands_pre =
commands = mypy src/

[testenv:importlint]
basepython = python3.7
deps =
     import-linter
commands_pre =
commands = lint-imports

[testenv:mkdocs]
basepython = python3.7
extras = mkdocs
deps =
commands_pre =
commands = mkdocs build

[testenv:vale]
basepython = python3.7
skip_install = true
deps =
commands_pre =
commands = vale --glob='*.md' docs README.md
whitelist_externals = vale

[testenv:doctest]
basepython = python3.7
deps =
     coverage
     Django
     PyYAML
commands = coverage run -m mddoctest

[testenv:remarklint]
basepython = python3.7
skip_install = true
deps =
commands_pre =
commands =
         npm install
         npm run lint:md
whitelist_externals = npm

[testenv:yamllint]
basepython = python3.7
skip_install = true
deps =
     yamllint
commands_pre =
commands = yamllint --strict .

[testenv:jscpd]
basepython = python3.7
skip_install = true
deps =
commands_pre =
commands =
         npm install
         npm run lint:cp
whitelist_externals = npm
